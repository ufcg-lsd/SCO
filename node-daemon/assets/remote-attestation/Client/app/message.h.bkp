#ifndef _MESSAGE_H
#define _MESSAGE_H

#include <inttypes.h>
#include <string.h>
#include "json-cpp.hpp"

#define REQUEST_SECRET_DATA       0
#define CHALLENGE                 1
#define MSG1                      2
#define MSG2                      3
#define MSG3                      4
#define REMOTE_ATTESTATION_RESULT 5
#define SECRET                    6

struct remote_attestation_message_t {
    int message_type;
    std::string payload;
};

// For serialization and deserialization of remote attestation messages to/from JSON string
template<typename X>
inline void serialize(jsoncpp::Stream<X>& stream, remote_attestation_message_t& ra_message) {
    fields(ra_message, stream, "message_type", ra_message.message_type, "payload", ra_message.payload);
}

#endif
